name: Release

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type (auto, major, minor, patch)'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - major
          - minor
          - patch

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Fail if branch is not main
        if: github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/main'
        run: |
          echo "This workflow should not be triggered with workflow_dispatch on a branch other than main"
          exit 1

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - uses: taiki-e/install-action@just

      - name: Build WASM module
        run: just wasm

      - name: Cache binaries
        uses: actions/cache/save@v4
        with:
          path: bin/
          key: binaries-${{ github.run_id }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Fail if branch is not main
        if: github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/main'
        run: |
          echo "This workflow should not be triggered with workflow_dispatch on a branch other than main"
          exit 1

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install git-cliff
        uses: taiki-e/install-action@git-cliff

      - name: Calculate next version
        id: version
        run: |
          BUMP_TYPE="${{ github.event.inputs.bump_type }}"
          BUMP_ARG="${BUMP_TYPE:-auto}"

          if [ "$BUMP_ARG" = "auto" ]; then
            VERSION=$(git cliff --bump --bumped-version)
          else
            VERSION=$(git cliff --bump $BUMP_ARG --bumped-version)
          fi

          [[ "$VERSION" =~ ^v ]] || VERSION="v$VERSION"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Calculated version: $VERSION"

      - name: Generate release changelog
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: --tag ${{ steps.version.outputs.version }} --unreleased --strip header
        env:
          OUTPUT: RELEASE_CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Create and push tag
        run: |
          git tag -a ${{ steps.version.outputs.version }} -m "${{ steps.version.outputs.version }}"
          git push origin ${{ steps.version.outputs.version }}

      - name: Restore binaries
        uses: actions/cache/restore@v4
        with:
          path: bin/
          key: binaries-${{ github.run_id }}

      - name: Generate SHA256 checksums
        run: |
          cd bin
          sha256sum sqlc-gen-go.wasm >checksums.txt
          cat checksums.txt

      - name: Add configuration to release notes
        run: |
          SHA256=$(cat bin/checksums.txt | cut -d' ' -f1)

          cat > RELEASE_CHANGELOG_TEMP.md <<EOF
          ## Configuration

          \`\`\`yaml
          version: '2'
          plugins:
          - name: golang
            wasm:
              url: https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/sqlc-gen-go.wasm
              sha256: $SHA256
          \`\`\`

          EOF

          # Append original changelog
          cat RELEASE_CHANGELOG.md >> RELEASE_CHANGELOG_TEMP.md
          mv RELEASE_CHANGELOG_TEMP.md RELEASE_CHANGELOG.md

      - name: Display RELEASE_CHANGELOG.md
        run: cat RELEASE_CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body_path: RELEASE_CHANGELOG.md
          files: |
            bin/sqlc-gen-go.wasm
            bin/checksums.txt
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'rc') }}

      - name: Update CHANGELOG.md
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: --tag ${{ steps.version.outputs.version }}
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Commit and push CHANGELOG
        run: |
          git add CHANGELOG.md
          git commit -m "chore(release): update CHANGELOG.md for ${{ steps.version.outputs.version }}" || echo "No changes to commit"
          git push origin main || echo "No changes to push"
